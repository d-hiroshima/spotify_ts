// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js用のテーブル
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  name          String?
  spotifyId     String?      @unique
  accounts      Account[]
  sessions      Session[]
  playHistory   PlayHistory[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

// アプリケーション固有のテーブル
model PlayHistory {
  id          String   @id @default(cuid())
  userId      String
  trackId     String
  trackName   String
  artistName  String
  albumName   String
  playedAt    DateTime
  durationMs  Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  track       Track?   @relation(fields: [trackId], references: [spotifyId])
  createdAt   DateTime @default(now())

  @@index([userId])
  @@index([playedAt(sort: Desc)])
}

model Track {
  spotifyId      String         @id
  name           String
  artists        Json
  album          Json
  durationMs     Int
  popularity     Int?
  audioFeatures  Json?
  playHistories  PlayHistory[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}